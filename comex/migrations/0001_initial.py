# Generated by Django 2.2.11 on 2020-03-23 14:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('remote', models.CharField(max_length=30)),
                ('architecture', models.CharField(max_length=30)),
                ('creation', models.DateField()),
                ('status', models.CharField(max_length=30)),
                ('containerType', models.CharField(max_length=30)),
                ('pid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ContainerConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bootAutostart', models.BooleanField()),
                ('bootAutoStartDelay', models.IntegerField()),
                ('bootAutostartPriority', models.IntegerField()),
                ('bootHostShutDownTimeOut', models.IntegerField()),
                ('bootStopPrority', models.IntegerField()),
                ('env', models.CharField(max_length=30)),
                ('limitsCpu', models.CharField(max_length=30)),
                ('limitsCpuAllowance', models.CharField(max_length=30)),
                ('limitsCpuPriority', models.CharField(max_length=30)),
                ('limitsDiskPriority', models.IntegerField()),
                ('limitsHugePages64K', models.CharField(max_length=30)),
                ('limitsCpuHugePages1M', models.CharField(max_length=30)),
                ('limitsCpuHugePages2M', models.CharField(max_length=30)),
                ('limitsCpuHugePages1G', models.CharField(max_length=30)),
                ('limitsKernel', models.CharField(max_length=30)),
                ('limitsMemory', models.CharField(max_length=30)),
                ('limitsMemoryEnforce', models.CharField(max_length=30)),
                ('limitsMemoryHugePages', models.BooleanField()),
                ('limitsMemorySwap', models.BooleanField()),
                ('limitsMemorySwapPriority', models.IntegerField()),
                ('limitsNetworkPriority', models.IntegerField()),
                ('limitsProcesses', models.IntegerField()),
                ('linuxKernelModules', models.CharField(max_length=30)),
                ('migrationIncrementalMemory', models.BooleanField()),
                ('migrationIncrementalMemoryGoal', models.IntegerField()),
                ('migrationIncrementalMemoryIterations', models.IntegerField()),
                ('nvidiaDriverCapabilities', models.CharField(max_length=30)),
                ('nvidiaRuntime', models.BooleanField()),
                ('nvidiaRequireCuda', models.CharField(max_length=30)),
                ('nvidiaRequireDriver', models.CharField(max_length=30)),
                ('securityDevLxd', models.BooleanField()),
                ('securityIdMapBase', models.IntegerField()),
                ('securityIdMapIsolated', models.BooleanField()),
                ('securityIdMapSize', models.IntegerField()),
                ('securityNesting', models.BooleanField()),
                ('securityPrivileged', models.BooleanField()),
                ('securityProtectionDelete', models.BooleanField()),
                ('securityProtectionShift', models.BooleanField()),
                ('securitySecureBoot', models.BooleanField()),
                ('securitySyscallsBlackList', models.CharField(max_length=30)),
                ('securitySyscallsBlackListCompat', models.BooleanField()),
                ('securitySyscallsBlackListDefault', models.BooleanField()),
                ('securitySyscallsInterceptMknod', models.BooleanField()),
                ('securitySyscallsInterceptMount', models.BooleanField()),
                ('securitySyscallsInterceptMountAllowed', models.CharField(max_length=30)),
                ('securitySyscallsInterceptMountFuse', models.CharField(max_length=30)),
                ('securitySyscallsInterceptMountShift', models.BooleanField()),
                ('securitySyscallsInterceptSetxattr', models.BooleanField()),
                ('securitySyscallsWhiteList', models.CharField(max_length=30)),
                ('snapshotsSchedule', models.CharField(max_length=30)),
                ('snapshotsScheduleStopped', models.BooleanField()),
                ('snapshotsPattern', models.CharField(max_length=30)),
                ('snapshotsExpiry', models.CharField(max_length=30)),
                ('user', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comex.Container')),
            ],
        ),
        migrations.CreateModel(
            name='NetworkConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bridgeDriver', models.CharField(max_length=30)),
                ('bridgeExternal_interfaces', models.CharField(max_length=30)),
                ('bridgeHwaddr', models.CharField(max_length=30)),
                ('bridgeMode', models.CharField(max_length=30)),
                ('bridgeMtu', models.IntegerField()),
                ('dnsDomain', models.CharField(max_length=30)),
                ('dnsMode', models.CharField(max_length=30)),
                ('fanOverlay_subnet', models.CharField(max_length=30)),
                ('fanType', models.CharField(max_length=30)),
                ('fanUnderlay_subnet', models.CharField(max_length=30)),
                ('ipv4Address', models.CharField(max_length=30)),
                ('ipv4Dhcp', models.BooleanField()),
                ('ipv4DhcpExpiry', models.CharField(max_length=30)),
                ('ipv4DhcpGateway', models.CharField(max_length=30)),
                ('ipv4DhcpRanges', models.CharField(max_length=30)),
                ('ipv4Firewall', models.BooleanField()),
                ('ipv4Nat', models.BooleanField()),
                ('ipv4NatOrder', models.CharField(max_length=30)),
                ('ipv4NatAddress', models.CharField(max_length=30)),
                ('ipv4Routes', models.CharField(max_length=30)),
                ('ipv4Routing', models.BooleanField()),
                ('ipv6Address', models.CharField(max_length=30)),
                ('ipv6Dhcp', models.BooleanField()),
                ('ipv6DhcpExpiry', models.CharField(max_length=30)),
                ('ipv6DhcpGateway', models.CharField(max_length=30)),
                ('ipv6DhcpRanges', models.CharField(max_length=30)),
                ('ipv6Firewall', models.BooleanField()),
                ('ipv6Nat', models.BooleanField()),
                ('ipv6NatOrder', models.CharField(max_length=30)),
                ('ipv6NatAddress', models.CharField(max_length=30)),
                ('ipv6Routes', models.CharField(max_length=30)),
                ('ipv6Routing', models.BooleanField()),
                ('rawDnsMasq', models.CharField(max_length=30)),
                ('tunnelNAMEGroup', models.CharField(max_length=30)),
                ('tunnelNAMEId', models.IntegerField()),
                ('tunnelNAMEInterface', models.CharField(max_length=30)),
                ('tunnelNAMELocal', models.CharField(max_length=30)),
                ('tunnelNAMEPort', models.IntegerField()),
                ('tunnelNAMEProtocol', models.CharField(max_length=30)),
                ('tunnelNAMERemote', models.CharField(max_length=30)),
                ('tunnelNAMETTL', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Nic',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comex.Device')),
                ('parent', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=30)),
                ('mtu', models.IntegerField()),
                ('hwaddr', models.CharField(max_length=30)),
            ],
            bases=('comex.device', models.Model),
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=30)),
                ('networkType', models.CharField(max_length=30)),
                ('managed', models.BooleanField()),
                ('status', models.CharField(max_length=30)),
                ('networkConfig', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='comex.NetworkConfig')),
            ],
        ),
        migrations.AddField(
            model_name='device',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comex.Profile'),
        ),
        migrations.AddField(
            model_name='container',
            name='containerConfig',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='comex.ContainerConfig'),
        ),
        migrations.AddField(
            model_name='container',
            name='network',
            field=models.ManyToManyField(to='comex.Network'),
        ),
        migrations.AddField(
            model_name='container',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comex.Profile'),
        ),
        migrations.CreateModel(
            name='Bridge',
            fields=[
                ('nic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comex.Nic')),
                ('hostName', models.CharField(max_length=30)),
                ('limitsIngress', models.CharField(max_length=30)),
                ('limitsEgress', models.CharField(max_length=30)),
                ('limitsMax', models.CharField(max_length=30)),
                ('ipv4address', models.CharField(max_length=30)),
                ('ipv6address', models.CharField(max_length=30)),
                ('ipv4routes', models.CharField(max_length=30)),
                ('ipv6routes', models.CharField(max_length=30)),
                ('securityMacFiltering', models.BooleanField()),
                ('securityIpv4Filtering', models.BooleanField()),
                ('securityIpv6Filtering', models.BooleanField()),
                ('maasSubnetIpv4', models.CharField(max_length=30)),
                ('maasSubnetIpv6', models.CharField(max_length=30)),
                ('bootPriority', models.IntegerField()),
            ],
            bases=('comex.nic',),
        ),
        migrations.CreateModel(
            name='Ipvlan',
            fields=[
                ('nic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comex.Nic')),
                ('vlan', models.IntegerField()),
                ('ipv4address', models.CharField(max_length=30)),
                ('ipv6address', models.CharField(max_length=30)),
            ],
            bases=('comex.nic',),
        ),
        migrations.CreateModel(
            name='MacVlan',
            fields=[
                ('nic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comex.Nic')),
                ('vlan', models.IntegerField()),
                ('maasSubnetIpv4', models.CharField(max_length=30)),
                ('maasSubnetIpv6', models.CharField(max_length=30)),
                ('bootPriority', models.IntegerField()),
            ],
            bases=('comex.nic',),
        ),
        migrations.CreateModel(
            name='P2P',
            fields=[
                ('nic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comex.Nic')),
                ('hostName', models.CharField(max_length=30)),
                ('limitsIngress', models.CharField(max_length=30)),
                ('limitsEgress', models.CharField(max_length=30)),
                ('limitsMax', models.CharField(max_length=30)),
                ('ipv4routes', models.CharField(max_length=30)),
                ('ipv6routes', models.CharField(max_length=30)),
                ('bootPriority', models.IntegerField()),
            ],
            bases=('comex.nic',),
        ),
        migrations.CreateModel(
            name='Physical',
            fields=[
                ('nic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comex.Nic')),
                ('vlan', models.IntegerField()),
                ('maasSubnetIpv4', models.CharField(max_length=30)),
                ('maasSubnetIpv6', models.CharField(max_length=30)),
                ('bootPriority', models.IntegerField()),
            ],
            bases=('comex.nic',),
        ),
        migrations.CreateModel(
            name='Routed',
            fields=[
                ('nic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comex.Nic')),
                ('vlan', models.IntegerField()),
                ('ipv4address', models.CharField(max_length=30)),
                ('ipv6address', models.CharField(max_length=30)),
            ],
            bases=('comex.nic',),
        ),
        migrations.CreateModel(
            name='SRIOV',
            fields=[
                ('nic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comex.Nic')),
                ('securityMacFiltering', models.BooleanField()),
                ('vlan', models.IntegerField()),
                ('maasSubnetIpv4', models.CharField(max_length=30)),
                ('maasSubnetIpv6', models.CharField(max_length=30)),
                ('bootPriority', models.IntegerField()),
            ],
            bases=('comex.nic',),
        ),
    ]
